@page
@model Library.Pages.User.DetailsModel
@{
}

<div class="container row p-0 m-0">

    <div class="col-12">
        <h2 class="text-info">Details</h2>
    </div>

    <div class="col-12 p-2 mt3">
        <table class="table table-striped border">
            <tr class="table-secondary">
                <th>
                    <label>User Name</label>
                </th>
                <th>
                    <label asp-for="NewUser.BirthDate"></label>
                </th>
                <th>
                    <label asp-for="NewUser.Email"></label>
                </th>
                <th>
                    <label asp-for="NewUser.Phone"></label>
                </th>
                <th>
                    <label asp-for="NewUser.AddDate"></label>
                </th>
                <th>
                    <label asp-for="NewUser.ModifiedDate"></label>
                </th>
            </tr>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => Model.NewUser.FirstName)
                    @Html.DisplayFor(modelItem => Model.NewUser.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.NewUser.BirthDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.NewUser.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.NewUser.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.NewUser.AddDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.NewUser.ModifiedDate)
                </td>
            </tr>
        </table>
    </div>

    <div class="col-6">
        <h2 class="text-info">List of books</h2>
    </div>

    <div class="col-6">
        <h2 class="text-info">Borrow history</h2>
    </div>

    <div class="col-6 p-2 mt3">
        @if (Model.Books.Count() > 0)
        {
            <table class="table table-striped border">
                <tr class="table-secondary">
                    <th>
                        <label asp-for="Books.FirstOrDefault().Author"></label>
                    </th>
                    <th>
                        <label asp-for="Books.FirstOrDefault().Title"></label>
                    </th>
                    <th>
                        <label>Genre</label>
                    </th>
                </tr>
                @foreach (var book in Model.Books)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => book.Author)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => book.Title)
                        </td>
                        <td>
                            @{
                                IEnumerable<string> genre = from dictBG in Model.DictBookGenres
                                                            where book.BookGenreId == dictBG.BookGenreId
                                                            select dictBG.Name;
                            }
                            @genre.FirstOrDefault()
                        </td>
                    </tr>
                }
            </table>
        }
        else
        {
            <p><h3>User is not currently borrowing books</h3></p>
        }
    </div>

    <div class="col-6 p-2 mt3">
        @if (Model.Borrows.Count() > 0)
        {
            <table class="table table-striped border">
                <tr class="table-secondary">
                    <th>
                        <label>Book Title</label>
                    </th>
                    <th>
                        <label asp-for="Borrows.FirstOrDefault().FromDate"></label>
                    </th>
                    <th>
                        <label asp-for="Borrows.FirstOrDefault().ToDate"></label>
                    </th>
                </tr>
                @foreach (var borrow in Model.Borrows)
                {
                    <tr>
                        <td>
                            @{
                                IEnumerable<string> title = from bk in Model.Books
                                                            where bk.BookId == borrow.BookId
                                                            select bk.Title;
                            }
                            @title.FirstOrDefault()
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => borrow.FromDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => borrow.ToDate)
                        </td>
                    </tr>
                }
            </table>
        }
        else
        {
            <p><h3>User has not borrowed books yet</h3></p>
        }
    </div>
</div>

<div class="form-group flex-row">
    <div class="col-3">
        <a asp-page="Index" class="btn btn-primary form-control">Back</a>
    </div>
</div>